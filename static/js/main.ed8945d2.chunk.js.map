{"version":3,"sources":["logo.svg","Clock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Clock","props","state","time","Date","val","setVal","bind","this","setState","e","console","log","target","value","setInterval","updateTime","getVal","toLocaleTimeString","type","onChange","React","Component","App","className","src","logo","alt","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAAe,G,MAAA,IAA0B,kC,0CCkD1BA,E,kDAxCb,WAAaC,GAAgB,IAAD,8BAC1B,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAAIC,KACVC,IAAK,IAEP,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBANY,E,8CAQ5B,WACEC,KAAKC,SAAS,CACZN,KAAM,IAAIC,S,oBAGd,WACE,OAAOI,KAAKN,MAAMG,M,oBAEpB,SAAQK,GACNC,QAAQC,IAAIF,EAAEG,QACdL,KAAKC,SAAS,CACZJ,KAAMK,EAAEG,OAAOC,U,+BAGnB,WAAsB,IAAD,OACnBC,aAAY,WACV,EAAKC,eACJ,KACHL,QAAQC,IAAIJ,KAAKS,Y,oBAGnB,WACE,OACE,gCACE,wCAAYT,KAAKN,MAAMC,KAAKe,wBAC5B,uBAAOC,KAAK,OAAOL,MAAON,KAAKN,MAAMG,IAAKe,SAAUZ,KAAKF,gB,GAlC7Ce,IAAMC,W,MCkBXC,MAtBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,+CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLf,OAAO,SACPgB,IAAI,sBAJN,2BAQA,cAAC,EAAD,UCPOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ed8945d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\r\nimport { ChangeEvent } from \"react\"\r\n\r\n\r\ntype State = {\r\n  time: Date,\r\n  val: number\r\n}\r\n\r\nclass Clock extends React.Component<{}, State>{\r\n  constructor (props: object) {\r\n    super(props)\r\n    this.state = {\r\n      time: new Date(),\r\n      val: 12\r\n    }\r\n    this.setVal = this.setVal.bind(this)\r\n  }\r\n  updateTime () {\r\n    this.setState({\r\n      time: new Date()\r\n    })\r\n  }\r\n  getVal () {\r\n    return this.state.val\r\n  }\r\n  setVal (e: ChangeEvent<HTMLInputElement>) {\r\n    console.log(e.target)\r\n    this.setState({\r\n      val: +e.target.value\r\n    })\r\n  }\r\n  componentDidMount () {\r\n    setInterval(()=> {\r\n      this.updateTime()\r\n    }, 1000)\r\n    console.log(this.getVal())\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <p>now is { this.state.time.toLocaleTimeString() }</p>\r\n        <input type=\"text\" value={this.state.val} onChange={this.setVal} />\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default Clock","import React from 'react';\nimport logo from './logo.svg';\nimport Clock from './Clock';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Link to React\n        </a>\n        <Clock />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}